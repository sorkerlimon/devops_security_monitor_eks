cd terraform
terraform init
terraform plan
terraform apply
terraform show
terraform plan -destroy
terraform destroy

terraform validate


terraform destroy -target=aws_eks_cluster.cluster_devops
terraform destroy -target="aws_eks_cluster.cluster_devops"
terraform apply -target="aws_security_group.eks_cluster_sg"




terraform apply -target="aws_eks_cluster.cluster_devops" -target="aws_eks_access_entry.auto_node_role" -target="aws_eks_access_entry.current_user" -target="aws_eks_access_policy_association.current_user_policy" -auto-approve


cd terraform
terraform apply -target="aws_eks_cluster.cluster_devops" -target="aws_eks_access_entry.auto_node_role" -target="aws_eks_access_entry.service_role" -target="aws_eks_access_entry.current_user" -target="aws_eks_access_policy_association.service_role_policy" -target="aws_eks_access_policy_association.current_user_policy" -auto-approve









# Bastion configuration

#!/bin/bash
echo "Installing missing tools on Ubuntu bastion..."

# Install Docker
sudo apt update
sudo apt install -y docker.io
sudo systemctl start docker
sudo systemctl enable docker
sudo usermod -a -G docker ubuntu

# Install AWS CLI v2
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
sudo apt install -y unzip
unzip awscliv2.zip
sudo ./aws/install

# Clean up
rm -rf awscliv2.zip aws/

echo "Installation complete!"
echo "Please run: aws configure"



docker --version
aws --version
kubectl version --client
eksctl version
helm version


# Configure AWS and test EKS access
aws configure
aws eks update-kubeconfig --region eu-central-1 --name devops_cluster
kubectl get nodes